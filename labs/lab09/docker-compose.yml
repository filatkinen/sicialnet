version: '3'
services:
  pgsql:
    build:
      context: ./pgsql
    container_name: socialnet_pgsql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local

  rabbitmq:
    image: rabbitmq:3-management
    hostname: socialnet_rabbit
    container_name: socialnet_rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5
    #    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpass
    #   ports:
    #      - 15672:15672
    #      - 5672:5672
    expose:
      - 5672
    networks:
      - local


  goapp:
    build:
      context: ./app
    container_name: socialnet_app
    depends_on:
      pgsql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    tty: true
    stdin_open: true
    ports:
      - "8800:8800"
    networks:
      - local
    environment:
      - SOCIALNET_DB=snet
      - SOCIALNET_DB_PASS=socialnet
      - SOCIALNET_DB_USER=socialnet
      - SOCIALNET_DB_PORT=5432
      - SOCIALNET_DB_TYPE=pgsql
      - SOCIALNET_DB_ADDRESS=socialnet_pgsql
      - SOCIALNET_REDIS_ADDRESS=socialnet_redis
      - SOCIALNET_REDIS_PORT=6379
      - RABBIT_USER=rmuser
      - RABBIT_PASS=rmpass


  wsclient:
    build:
      context: ./wsclient
    container_name: socialnet_wsclient
    depends_on:
      pgsql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    tty: true
    stdin_open: true
    networks:
      - local



  redis:
    image: redis:latest
    container_name: socialnet_redis
    networks:
      - local
    expose:
      - 6379
    # ports:
    # - 6379:6379

networks:
  local: